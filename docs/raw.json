{"majorversion": 3, "classmap": {"Plugin.Inspector": {"name": "Plugin.Inspector", "namespace": "", "module": "gallery-inspector", "guessedname": "Plugin", "extends": "Inspector", "superclass": "Inspector", "file": "inspector-plugin.js", "guessedtype": "property", "shortname": "Plugin.Inspector", "description": "<p>Binds a new Inspector instance to an existing object.</p>\n<p>Example:</p>\n<pre>\nmyWidget.plug(Y.Plugin.Inspector);\n</pre>"}, "Inspector": {"name": "Inspector", "constructors": [{"params": [{"type": "Object", "name": "config", "description": " Configuration object."}], "description": "Real-time attribute inspector widget."}], "namespace": "", "module": "gallery-inspector", "events": {"stringsChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "stringsChange", "description": "Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "excludeChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "excludeChange", "description": "Fires when the value for the configuration attribute 'exclude' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "hostChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "hostChange", "description": "Fires when the value for the configuration attribute 'host' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "filterChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "filterChange", "description": "Fires when the value for the configuration attribute 'filter' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "includeChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "includeChange", "description": "Fires when the value for the configuration attribute 'include' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "pausedChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "pausedChange", "description": "Fires when the value for the configuration attribute 'paused' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "nameChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "nameChange", "description": "Fires when the value for the configuration attribute 'name' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "hostAttrsChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "hostAttrsChange", "description": "Fires when the value for the configuration attribute 'hostAttrs' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "draggableChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "draggableChange", "description": "Fires when the value for the configuration attribute 'draggable' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "collapsedChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "collapsedChange", "description": "Fires when the value for the configuration attribute 'collapsed' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}}, "guessedname": "Lang", "methods": {"_uiSetCollapsed": {"protected": "", "params": [{"type": "Boolean", "name": "collapsed", "description": " Whether the UI should be collapsed."}], "description": "Sets the UI collapsed state.", "guessedname": "_uiSetCollapsed", "guessedtype": "function"}, "_afterPausedChange": {"protected": "", "params": [{"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>pausedChange</code> events.", "guessedname": "_afterPausedChange", "guessedtype": "function"}, "_renderBody": {"protected": "", "description": "Renders the body section of the UI. Intended for use only during the\nrender lifecycle.", "guessedname": "_renderBody", "guessedtype": "function"}, "_renderAttr": {"protected": "", "params": [{"type": "String", "name": "name", "description": " Attribute name."}, {"type": "Number", "name": "i", "description": " Index."}], "description": "Renders a single row (name column only) for the given attribute name.", "guessedname": "_renderAttr", "guessedtype": "function"}, "_syncAttrs": {"protected": "", "description": "Syncs the host's attributes with the Inspector instance and applies any\n<code>include</code> or <code>exclude</code> filters.", "guessedname": "_syncAttrs", "guessedtype": "function"}, "_uiSetAttrValue": {"protected": "", "params": [{"type": "String", "name": "name", "description": " Attribute name."}, {"type": "Any", "name": "value", "description": " Attribute value."}], "description": "Sets the value for the given attribute name.", "guessedname": "_uiSetAttrValue", "guessedtype": "function"}, "_uiSetAttrValues": {"protected": "", "description": "Sets the value for all attributes.", "guessedname": "_uiSetAttrValues", "guessedtype": "function"}, "_uiSetFilter": {"protected": "", "params": [{"type": "String", "name": "value", "description": " Filter value."}], "description": "Sets the UI filter input witht the given filter value.", "guessedname": "_uiSetFilter", "guessedtype": "function"}, "_uiSetHeight": {"protected": "", "params": [{"type": "Number", "name": "height", "description": " Height."}], "description": "Sets the height of the UI. Sets the body height to the specified height\nminus the combined heights of the header and footer. Overrides\n<code>Widget.prototype._uiSetHeight</code>.", "guessedname": "_uiSetHeight", "guessedtype": "function"}, "_uiFilterAttrs": {"protected": "", "params": [{"type": "String", "name": "value", "description": " Filter value."}], "description": "Filters visible attributes by the given filter value.", "guessedname": "_uiFilterAttrs", "guessedtype": "function"}, "_afterHostDestroyedChange": {"protected": "", "params": [{"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>destroyedChange</code> events on the host.", "guessedname": "_afterHostDestroyedChange", "guessedtype": "function"}, "_uiSetPosition": {"protected": "", "description": "Sets the UI position and zIndex, adjusting for the presence of other\nInspector instances, such that they appear to stack. Intended to be\ncalled during the syncUI lifecycle event.", "guessedname": "_uiSetPosition", "guessedtype": "function"}, "_formatValue": {"protected": "", "params": [{"type": "Any", "name": "value", "description": " The value to format."}], "description": "Formats a value for display based on its type.", "guessedname": "_formatValue", "guessedtype": "function"}, "_onFilterEscapeKey": {"protected": "", "params": [{"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>esc</code> <code>keyUp</code> events on the filter input.", "guessedname": "_onFilterEscapeKey", "guessedtype": "function"}, "_purgeEvents": {"protected": "", "params": [{"type": "Array", "name": "events", "description": " Array of event handles."}], "description": "Detaches all event handles in the given array.", "guessedname": "_purgeEvents", "guessedtype": "function"}, "_afterExcludeChange": {"protected": "", "params": [{"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>excludeChange</code> events.", "guessedname": "_afterExcludeChange", "guessedtype": "function"}, "_afterIncludeChange": {"protected": "", "params": [{"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>includeChange</code> events.", "guessedname": "_afterIncludeChange", "guessedtype": "function"}, "_afterFilterChange": {"protected": "", "params": [{"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>filterChange</code> events.", "guessedname": "_afterFilterChange", "guessedtype": "function"}, "_onFilter": {"protected": "", "params": [{"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>valueChange</code> events on the filter input.", "guessedname": "_onFilter", "guessedtype": "function"}, "_renderFoot": {"protected": "", "description": "Renders the footer section of the UI. Intended for use only during the\nrender lifecycle.", "guessedname": "_renderFoot", "guessedtype": "function"}, "_onPauseClick": {"protected": "", "params": [{"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>click</code> events on the pause checkbox.", "guessedname": "_onPauseClick", "guessedtype": "function"}, "_onCollapseClick": {"protected": "", "params": [{"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>click</code> events on the collapse button.", "guessedname": "_onCollapseClick", "guessedtype": "function"}, "_uiSetDraggable": {"protected": "", "params": [{"type": "Boolean", "name": "draggable", "description": " Whether the UI should be draggable."}], "description": "Sets the UI draggable state.", "guessedname": "_uiSetDraggable", "guessedtype": "function"}, "_bindHostValueChangeEvents": {"protected": "", "description": "Sets up event handlers for host attribute value change events.", "guessedname": "_bindHostValueChangeEvents", "guessedtype": "function"}, "_uiSyncAttrs": {"protected": "", "description": "Mini lifecycle for updating all attributes. Purges existing host events,\nre-renders all attributes, then binds new host events.", "guessedname": "_uiSyncAttrs", "guessedtype": "function"}, "_afterHostAttrsChange": {"protected": "", "params": [{"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>hostAttrsChange</code> events.", "guessedname": "_afterHostAttrsChange", "guessedtype": "function"}, "_renderAttrs": {"protected": "", "description": "Renders all rows (name column only) for all attributes.", "guessedname": "_renderAttrs", "guessedtype": "function"}, "_afterHostAttrValueChange": {"protected": "", "params": [{"type": "String", "name": "name", "description": " Attribute name."}, {"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>[attribute]Change</code> events on the host.", "guessedname": "_afterHostAttrValueChange", "guessedtype": "function"}, "_afterCollapsedChange": {"protected": "", "params": [{"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>collaspedChange</code> events.", "guessedname": "_afterCollapsedChange", "guessedtype": "function"}, "_uiSetHostDestroyed": {"protected": "", "description": "Sets the host destroyed state in the UI.", "guessedname": "_uiSetHostDestroyed", "guessedtype": "function"}, "_uiSetPaused": {"protected": "", "params": [{"type": "Boolean", "name": "paused", "description": " Whether the UI should be paused."}], "description": "Sets the UI paused state.", "guessedname": "_uiSetPaused", "guessedtype": "function"}, "_renderHead": {"protected": "", "description": "Renders the header section of the UI. Intended for use only during the\nrender lifecycle.", "guessedname": "_renderHead", "guessedtype": "function"}, "_afterDraggableChange": {"protected": "", "params": [{"type": "EventFacade", "name": "e", "description": ""}], "description": "Handles <code>draggableChange</code> events.", "guessedname": "_afterDraggableChange", "guessedtype": "function"}}, "uses": ["WidgetStack"], "superclass": "Widget", "file": "inspector.js", "guessedtype": "property", "extends": "Widget", "shortname": "Inspector", "configs": {"filter": {"type": "String", "description": "Filter text value.", "guessedname": "filter", "guessedtype": "property"}, "name": {"guessedtype": "property", "type": "String", "description": "Display name of the Inspector instance. If not specified, the host\nobject's <code>name</code> property will be used if present.", "guessedname": "name", "writeonce": ""}, "collapsed": {"default": "false", "type": "Boolean", "description": "If <code>true</code>, Inspector will initially render collapsed.", "guessedname": "collapsed", "guessedtype": "property"}, "hostAttrs": {"readonly": "", "type": "Object", "description": "Name/value pairs of the host object's attributes.", "guessedname": "hostAttrs", "guessedtype": "property"}, "draggable": {"default": "true", "type": "Boolean", "description": "If <code>true</code> Inspector will be draggable, with the header\nnode as the drag handle.", "guessedname": "draggable", "guessedtype": "property"}, "host": {"guessedtype": "property", "type": "Object", "description": "The object to inspect.", "guessedname": "host", "writeonce": ""}, "paused": {"default": "false", "type": "Boolean", "description": "If <code>true</code>, Inspector will intitally be paused.", "guessedname": "paused", "guessedtype": "property"}, "exclude": {"type": "Array", "description": "Array of attribute names to exclude from being displayed.", "guessedname": "exclude", "guessedtype": "property"}, "include": {"type": "Array", "description": "Array of attribute names to include. Opposite of, and overrides\n<code>exclude</code>.", "guessedname": "include", "guessedtype": "property"}, "strings": {"type": "Object", "description": "Translatable strings used by Inspector.", "guessedname": "strings", "guessedtype": "property"}}, "description": "Real-time attribute inspector widget."}}, "version": "0.1.0", "modules": {"gallery-inspector": {"description": "Real-time attribute inspector widget.", "submodules": ["gallery-inspector-plugin"], "classlist": ["Plugin.Inspector", "Inspector"], "filelist": ["inspector-plugin.js", "inspector.js"], "subdata": {"gallery-inspector-plugin": {"name": "Plugin.Inspector", "description": "<p>Binds a new Inspector instance to an existing object.</p>\n<p>Example:</p>\n<pre>\nmyWidget.plug(Y.Plugin.Inspector);\n</pre>"}}, "name": "gallery-inspector"}}, "filemap": {"inspector.js": {"classlist": ["Inspector"], "name": "inspector.js", "module": "gallery-inspector"}, "inspector-plugin.js": {"classlist": ["Plugin.Inspector"], "name": "inspector-plugin.js", "module": "gallery-inspector"}}}